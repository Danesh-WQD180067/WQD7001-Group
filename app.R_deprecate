#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)

heart_disease <- read.csv("data/clean_heart_disease.csv")

# Define UI for application that draws a histogram
ui <- fluidPage(
   
   # Application title
   titlePanel("Heart Disease Prediction"),
   
   # Sidebar with a slider input for number of bins 
   sidebarLayout(
      sidebarPanel(
         sliderInput("bins",
                     "Number of bins:",
                     min = 1,
                     max = 50,
                     value = 30
                     ),
         sliderInput("Age",
                     "Age:",
                     min = min(as.numeric(heart_disease$age)),
                     max = max(as.numeric(heart_disease$age)),
                     value = mean(as.numeric(heart_disease$age))
         ),
         sliderInput("gender",
                     "Gender:",
                     min = min(as.numeric(heart_disease$age)),
                     max = max(as.numeric(heart_disease$age)),
                     value = mean(as.numeric(heart_disease$age))
         ),
         sliderInput("height",
                     "Height:",
                     min = min(as.numeric(heart_disease$height)),
                     max = max(as.numeric(heart_disease$height)),
                     value = mean(as.numeric(heart_disease$height))
                     ),
         sliderInput("weight",
                     "Weight:",
                     min = min(as.numeric(heart_disease$weight)),
                     max = max(as.numeric(heart_disease$weight)),
                     value = mean(as.numeric(heart_disease$weight))
                     )
         
      ),
      
      # Show a plot of the generated distribution
      mainPanel(
         plotOutput("distPlot")
      )
   )
)

# Define server logic required to draw a histogram
server <- function(input, output) {
   
   output$distPlot <- renderPlot({
      # generate bins based on input$bins from ui.R
      x    <- faithful[, 2] 
      bins <- seq(min(x), max(x), length.out = input$bins + 1)
      
      # draw the histogram with the specified number of bins
      hist(x, breaks = bins, col = 'darkgray', border = 'white')
   })
}

# Run the application 
shinyApp(ui = ui, server = server)

